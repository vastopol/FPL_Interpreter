TODO - Unfinished works
-------------------------

* PRIMITIVE LANGUAGE OPERATIONS (not implemented yet)

- construction combining form
    "[F1,F2,...,Fn]"

- apply-to-all  
	"@"  

- conditial branch  
	"(H -> F,G)" 

-------------------------

* action.h/cpp -> complex tree traversal on AST nodes

* func.h/cpp -> add more functions for the vm fn_pointers 

-----------------------

* interpreter.h/cpp

parse user defined functions at the very begining
before the call to p_dot() have another function for that

fix immediate object construction, add the {} environment part

f:1 = element

f:<1> = sequence

-----------------------

* eventually

expression format -> functions:{arg1;arg2}

unlimited function composition applied to argument enclosure
either 1 or 2 arguments in braces, semicolon is argument separator

# single arg
F:{1}
F:{<1,2,3>}

# two arg
F:{1;2}
F:{<1,2,3>;<4,5,6>}
F:{1;<7,8,9>}

//---------------------------------------------

convert all instances of return 0 for NULL pointers to:

throw std::runtime_error("");