TODO - Unfinished works
-------------------------

* action.h/cpp -> tree traversal on AST nodes

* func.h/cpp ?? -> functs for the vm fn_pointers 

;;-----------------------

* object.h/cpp -> base class
    - function
    - sequence
    - element
    - colon   ':' the apply links the other parts  (might not need to be a class)
    - block    chunk of data to call parse on again


;;-----------------------

* interpreter.h/cpp -> recurse on parse for precedence && nested applications, build AST of Object*

 - postfix
 - ast

interperter can only handle stuff like 3 parts, function, colon, variable

can make new object or get a stored object from memory

f:<1>
g:<1,2>

not yet for '.'

;;-----------------------