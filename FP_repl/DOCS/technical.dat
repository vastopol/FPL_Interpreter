Technical stuff on memory management && system

SYSTEM CALLS (for memory management)
///******************************************

* let == set variables

syntax: "let name = value"

where element
   name = atom   
   x = 3
   
OR

where sequence
   name = <atom,...,atom>   
   s = <1,2,3>
//----------------------------------------

* def == compositional function

syntax: "def name = function"

the functions are macros substituted in on interpretation
//----------------------------------------

* rm  == delete variable from memory

syntax: "rm var"
//----------------------------------------

* dump == clear all contents of memory stored variables

syntax: "dump"
//----------------------------------------

* bufdump == clear all contents of buffer

syntax: "bufdump"
//----------------------------------------

* ls == prints contents of memory stored variables

syntax: "ls"
//----------------------------------------

* bufls == prints contents of buffer

syntax: "bufls"
//----------------------------------------

* load  == load content of script file to buffer

syntax: "load file.fps"
//----------------------------------------

* run  == execute content of buffer

syntax: "run"

///*********************************************


EVALUATION
///*********************************************

Evaluation is invoked with the special symbol '%'
When the '%' is the first character in the input string,
evaluation is called on the sequence of characters immediately after.
eg.
>>> %F:x
evaluate("F:x").
evaluate(apply function f to variable x).
return result.

///*********************************************
